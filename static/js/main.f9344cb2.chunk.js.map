{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getFormattedDate","Date","toUTCString","slice","Clock","state","date","timerId","this","window","setInterval","setState","console","info","prevProps","oldName","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","handleMouseLeftClick","event","preventDefault","handleMouseRightClick","document","addEventListener","prevState","prevHasClock","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAEA,SAASA,IACP,OAAQ,IAAIC,MAAQC,cAAcC,OAAO,IAAK,GAWzC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,KAAMN,KAFV,EAKEO,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,KAAMN,MACtBS,OAAOG,QAAQC,KAAK,EAAKR,MAAMC,QAC9B,OAXP,gCAcE,SAAmBQ,GACjB,IAAcC,EAAYD,EAAlBE,KACAA,EAASR,KAAKS,MAAdD,KAEJD,IAAYC,GACdP,OAAOG,QAAQM,MAAf,uBAAqCH,EAArC,eAAmDC,MAnBzD,kCAuBE,WACEP,OAAOU,cAAcX,KAAKD,WAxB9B,oBA2BE,WACE,IAAQD,EAASE,KAAKH,MAAdC,KACAU,EAASR,KAAKS,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGd,WAxCX,GAA2Be,aCV3B,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACErB,MAAQ,CACNsB,UAAU,EACVC,UAAW,WAHf,EAMErB,QAAU,EANZ,EAuCEsB,qBAAuB,SAACC,GACtBA,EAAMC,iBAEN,EAAKpB,SAAS,CAAEgB,UAAU,KA1C9B,EA6CEK,sBAAwB,WACtB,EAAKrB,SAAS,CAAEgB,UAAU,KA9C9B,uDAQE,WAA2B,IAAD,OACxBM,SAASC,iBAAiB,cAAe1B,KAAKqB,sBAE9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,uBAExCxB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEiB,UAAWN,QAC1B,QAfP,gCAkBE,SAAmBa,GAAyB,IAAD,OACvBC,EAAiBD,EAA3BR,SACAA,EAAanB,KAAKH,MAAlBsB,UAES,IAAbA,IAAuC,IAAjBS,GACxB3B,OAAOU,cAAcX,KAAKD,UAGX,IAAboB,IAAsC,IAAjBS,IACvB5B,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEiB,UAAWN,QAC1B,SA7BT,kCAiCE,WACEb,OAAOU,cAAcX,KAAKD,SAC1B0B,SAASI,oBAAoB,cAAe7B,KAAKqB,sBACjDI,SAASI,oBAAoB,QAAS7B,KAAKwB,yBApC/C,oBAiDE,WACE,MAAgCxB,KAAKH,MAA7BsB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAGEO,GAEE,cAAC,EAAD,CAAOX,KAAMY,WA3DzB,GAAyBP,aCZzBiB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.f9344cb2.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getFormattedDate(): string {\n  return (new Date()).toUTCString().slice(-12, -4);\n}\n\ntype State = {\n  date: string;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: getFormattedDate(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: getFormattedDate() });\n      window.console.info(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    const { name: oldName } = prevProps;\n    const { name } = this.props;\n\n    if (oldName !== name) {\n      window.console.debug(`Renamed from ${oldName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleMouseLeftClick);\n\n    document.addEventListener('click', this.handleMouseRightClick);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(prevState: State): void {\n    const { hasClock: prevHasClock } = prevState;\n    const { hasClock } = this.state;\n\n    if (hasClock === false && prevHasClock === true) {\n      window.clearInterval(this.timerId);\n    }\n\n    if (hasClock === true && prevHasClock === false) {\n      this.timerId = window.setInterval(() => {\n        this.setState({ clockName: getRandomName() });\n      }, 3300);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleMouseLeftClick);\n    document.removeEventListener('click', this.handleMouseRightClick);\n  }\n\n  handleMouseLeftClick = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleMouseRightClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {\n          hasClock\n          && (\n            <Clock name={clockName} />\n          )\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}